/*
 *   Copyright (C) 2014-2017 www.kequandian.net
 *
 *    The program may be used and/or copied only with the written permission
 *    from www.kequandian.net or in accordance with the terms and
 *    conditions stipulated in the agreement/contract under which the program
 *    has been supplied.
 *
 *    All rights reserved.
 *
 */

/*
 * This file is automatically generated by tools.
 * It defines fields related to the database table.
 *
 * DON'T EDIT IT. OTHERWIDE IT WILL BE OVERRIDE WHEN RE-GENERATING IF TABLE CHANGE.
 */
package com.jfeat.product.model.base;

import com.jfinal.plugin.activerecord.IBean;
import com.jfeat.core.BaseModel;
import java.math.BigDecimal;
import java.util.Date;

public abstract class InclPostageProvisoBase<M extends InclPostageProvisoBase<?>> extends BaseModel<M> implements IBean {

    /**
     * Table fields 
     */
    public enum Fields {
        ID("id"),
        FARE_ID("fare_id"),
        REGION("region"),
        PIECE_NO("piece_no"),
        WEIGHT_NO("weight_no"),
        BULK_NO("bulk_no"),
        AMOUNT("amount"),
        CARRY_WAY("carry_way"),
        TYPE("type");
        
        private String name;
        Fields(String name) {
            this.name = name;
        }

        public String toString() {
            return name;
        }
        public String like(Object obj) {
            return new StringBuilder(this.toString()).append(" LIKE ").append(obj).toString();
        }
        public String eq(Object obj) {
            return new StringBuilder(this.toString()).append("=").append(obj).toString();
        }
        public String ge(Object obj) {
            return new StringBuilder(this.toString()).append(">=").append(obj).toString();
        }
        public String lt(Object obj) {
            return new StringBuilder(this.toString()).append("<").append(obj).toString();
        }
        public String le(Object obj) {
            return new StringBuilder(this.toString()).append("<=").append(obj).toString();
        }
        public String isNull() {
            return new StringBuilder(this.toString()).append(" IS NULL").toString();
        }
        public String notNull() {
            return new StringBuilder(this.toString()).append(" NOT NULL").toString();
        }
        public String notEquals(Object obj) {
            return new StringBuilder(this.toString()).append("<>").append(obj).toString();
        }
    }

    public void setId(Integer var) {
        set(Fields.ID.toString(), var);
    }

    public Integer getId() {
        return (Integer) get(Fields.ID.toString());
    }

    public void setFareId(Integer var) {
        set(Fields.FARE_ID.toString(), var);
    }

    public Integer getFareId() {
        return (Integer) get(Fields.FARE_ID.toString());
    }

    public void setRegion(String var) {
        set(Fields.REGION.toString(), var);
    }

    public String getRegion() {
        return (String) get(Fields.REGION.toString());
    }

    public void setPieceNo(Integer var) {
        set(Fields.PIECE_NO.toString(), var);
    }

    public Integer getPieceNo() {
        return (Integer) get(Fields.PIECE_NO.toString());
    }

    public void setWeightNo(Integer var) {
        set(Fields.WEIGHT_NO.toString(), var);
    }

    public Integer getWeightNo() {
        return (Integer) get(Fields.WEIGHT_NO.toString());
    }

    public void setBulkNo(Integer var) {
        set(Fields.BULK_NO.toString(), var);
    }

    public Integer getBulkNo() {
        return (Integer) get(Fields.BULK_NO.toString());
    }

    public void setAmount(BigDecimal var) {
        set(Fields.AMOUNT.toString(), var);
    }

    public BigDecimal getAmount() {
        return (BigDecimal) get(Fields.AMOUNT.toString());
    }

    public void setCarryWay(Integer var) {
        set(Fields.CARRY_WAY.toString(), var);
    }

    public Integer getCarryWay() {
        return (Integer) get(Fields.CARRY_WAY.toString());
    }

    public void setType(Integer var) {
        set(Fields.TYPE.toString(), var);
    }

    public Integer getType() {
        return (Integer) get(Fields.TYPE.toString());
    }


    ///////////////////////////////////////////////////////////////////////////
    
}
